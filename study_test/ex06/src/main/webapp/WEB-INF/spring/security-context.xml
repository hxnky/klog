<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 핸들러를 빈으로 등록해서 직접 사용 -->
	<bean id="customAccessDenied"
		class="org.zerock.security.CustomAccessDeniedHandler"></bean>
	<bean id="customLoginSuccess"
		class="org.zerock.security.CustomLoginSuccessHandler"></bean>
	<bean id="bcrptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
	<bean id="customUserDetailsService"
		class="org.zerock.security.CustomUserDetailsService"></bean>


	<security:http>
		<security:intercept-url pattern="/sample/all	"
			access="permitAll" />
		<security:intercept-url
			pattern="/sample/member" access="hasRole('ROLE_MEMBER')" />
		<security:intercept-url pattern="/sample/admin"
			access="hasRole('ROLE_ADMIN')" />

		<!-- 에러 페이지 지정 -->
		<!-- <security:access-denied-handler error-page="/accessError"/> -->
		<security:access-denied-handler
			ref="customAccessDenied" />


		<!-- <security:form-login /> -->
		<!-- 로그인 페이지 직접 만들어 사용 -->
		<security:form-login login-page="/customLogin"
			authentication-success-handler-ref="customLoginSuccess" />

		<!-- 로그아웃 시 자동로그인 쿠키 삭제 추가 -->
		<security:logout logout-url="/customLogout"
			invalidate-session="true" delete-cookies="remember-me, JSESSION_ID" />

		<!-- 자동로그인/로그인 정보 기억(일주일 = 604800) -->
		<security:remember-me
			data-source-ref="dataSource" token-validity-seconds="604800" />


	</security:http>

	<!-- 인증과 권한에 대한 실제 처리 -->
	<security:authentication-manager>
		<security:authentication-provider
			user-service-ref="customUserDetailsService">
			<!-- <security:user-service> {noop} : 인코딩 처리 없이 패스워드 사용 <security:user 
				name="member" password="{noop}member" authorities="ROLE_MEMBER" /> <security:user 
				name="admin" password="{noop}admin" authorities="ROLE_MEMBER, ROLE_ADMIN" 
				/> </security:user-service> -->

			<!-- JDBC를 이용 -->
			<!-- <security:jdbc-user-service -->
			<!-- data-source-ref="dataSource" -->
			<!-- users-by-username-query="select userid, userpw , enabled from tbl_member 
				where userid= ?" -->
			<!-- authorities-by-username-query="select userid, auth from tbl_member_auth 
				where userid= ?" /> -->

			<!-- 특정 문자열을 암호화 -->
			<security:password-encoder
				ref="bcrptPasswordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
